use this.state and setState to manage your internal component state
– use forms and events in React to add interactions
– unidirectional data flow is an important concept in React
– compose components with children and reusable components
– usage and implementation of ES6 class components and functional stateless components 
– approaches to style your components

ES6

– arrow functions with block and concise bodies to shorten your function declarations 
– functions that are bound to a class are class methods
– destructuring of objects and arrays
– default parameters

General
– higher order functions


***update***

React

– ES6 class component lifecycle methods for different use cases – componentDidMount() for API interactions
– conditional renderings
– synthetic events on forms

ES6

– template strings to compose strings
– spread operator for immutable data structures – computed property names

General

– Hacker News API interaction – native fetch browser API
– client- and server-side search – pagination of data
– client-side caching

***update***

React

– PropTypes let you define type checks for components
– Jest allows you to write snapshot tests for your components – Enzyme allows you to write unit tests for your components

ES6

– import and export statements help you to organize your code

General
– code organization allows you to scale your application with best practices


***update***

React

– the ref attribute to reference DOM nodes
– higher order components are a common way to build advanced components – implementation of advanced interactions in React
– conditional classNames with a neat helper library

ES6

– rest destructuring to split up objects and arrays

***update***

React

– lift state management up and down to suitable components – setState can use a function to prevent stale state bugs
– existing external solutions that help you to tame the state

